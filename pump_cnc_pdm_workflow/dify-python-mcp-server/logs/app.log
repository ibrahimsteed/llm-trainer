2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 0, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "MCP Streamable HTTP Client", "version": "1.0.0"}}}
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 0, 'method': 'initialize', 'params': {'protocolVersion': '2024-11-05', 'capabilities': {}, 'clientInfo': {'name': 'MCP Streamable HTTP Client', 'version': '1.0.0'}}}
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 0, 'result': {'protocolVersion': '2024-11-05', 'capabilities': {'tools': {'listChanged': True}}, 'serverInfo': {'name': 'dify-external-api-server', 'version': '1.0.0'}}}
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "method": "notifications/initialized", "params": {}}
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'method': 'notifications/initialized', 'params': {}}
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:_handle_mcp_request:347 - MCP client initialized
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:172 - MCP notification handled, returning empty response
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 1, "method": "tools/list", "params": {}}
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 1, 'method': 'tools/list', 'params': {}}
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 1, 'result': {'tools': [{'name': 'get_iot_cnc_data', 'description': 'Get CNC data records with optional filtering and pagination', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Filter results by specific equipment ID (optional)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return (default: 50, max: 1000)'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination (default: 0)'}}, 'required': []}}, {'name': 'get_iot_cnc_data_by_id', 'description': 'Get a specific CNC data record by its ID', 'inputSchema': {'type': 'object', 'properties': {'cnc_data_id': {'type': 'string', 'description': 'The ID of the CNC data record to retrieve'}}, 'required': ['cnc_data_id']}}, {'name': 'get_iot_equipment_list', 'description': 'Get a list of unique equipment IDs from all CNC data records', 'inputSchema': {'type': 'object', 'properties': {}, 'required': []}}, {'name': 'search_cnc_data', 'description': 'Advanced search for CNC data with multiple filters', 'inputSchema': {'type': 'object', 'properties': {'equipment_ids': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of equipment IDs to filter by'}, 'operation_mode': {'type': 'string', 'enum': ['AUTO', 'MANUAL'], 'description': 'Filter by operation mode'}, 'has_alarm': {'type': 'boolean', 'description': 'Filter records with or without alarms'}, 'min_workpiece_count': {'type': 'integer', 'description': 'Minimum workpiece count filter'}, 'date_from': {'type': 'string', 'description': 'Filter records from this date (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'Filter records to this date (YYYY-MM-DD format)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination'}}, 'required': []}}, {'name': 'get_equipment_summary', 'description': 'Get summary statistics for specific equipment', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Equipment ID to get summary for'}, 'date_from': {'type': 'string', 'description': 'Start date for summary (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'End date for summary (YYYY-MM-DD format)'}}, 'required': ['equipment_id']}}]}}
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "get_iot_cnc_data_by_id", "arguments": {"cnc_data_id": "cnc-CNC-001-0021"}}}
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 2, 'method': 'tools/call', 'params': {'name': 'get_iot_cnc_data_by_id', 'arguments': {'cnc_data_id': 'cnc-CNC-001-0021'}}}
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:_handle_mcp_request:378 - MCP tool call: get_iot_cnc_data_by_id
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:_handle_mcp_request:397 - Parsed arguments: {'cnc_data_id': 'cnc-CNC-001-0021'}
2025-08-04 04:14:44 | INFO     | src.tools.external_api:execute_tool:140 - Executing IoT CNC tool: get_iot_cnc_data_by_id
2025-08-04 04:14:44 | INFO     | src.tools.external_api:_get_iot_cnc_data_by_id:213 - Making HTTP request to endpoint: get_iot_cnc_data_by_id
2025-08-04 04:14:44 | INFO     | src.utils.http_client:request:53 - HTTP GET Request to: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify.get_iot_cnc_data_by_id
2025-08-04 04:14:44 | INFO     | src.utils.http_client:request:54 - Base URL: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify., Endpoint: get_iot_cnc_data_by_id
2025-08-04 04:14:44 | INFO     | src.utils.http_client:request:55 - Params: {'cnc_data_id': 'cnc-CNC-001-0021'}, JSON Data: None
2025-08-04 04:14:44 | INFO     | src.utils.http_client:request:75 - Response received: Status 200, Content-Type: application/json
2025-08-04 04:14:44 | INFO     | src.utils.http_client:request:79 - JSON Response keys: ['message']
2025-08-04 04:14:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 2, 'result': {'content': [{'type': 'text', 'text': "CNC Data Record (ID: cnc-CNC-001-0021):\n```json\n{'id': 'cnc-CNC-001-0021', 'equipment_id': 'CNC-001', 'workpiece_count': 54, 'runtime': '324.5', 'cutting_time': '184.2', 'cnc_model': 'Fanuc Robodrill α-D21', 'current_tool_no': 'T01', 'operation_mode': 'AUTO', 'run_mode': 'MEM', 'rapid_override': '100', 'spindle_actual_rpm': '8000', 'feed_actual_rate': '1500', 'spindle_load': '92.5', 'x_axis_load': '31.5', 'y_axis_load': '26.8', 'z_axis_load': '76.9', 'alarm_code': 'ALM301', 'alarm_message': '主轴过载，Z轴负载异常升高', 'created_at': '2025-07-24 15:00:56.195304', 'updated_at': '2025-07-24 15:00:56.195304', 'created_by': 'Administrator', 'modified_by': 'Administrator'}\n```"}]}}
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 0, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "MCP Streamable HTTP Client", "version": "1.0.0"}}}
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 0, 'method': 'initialize', 'params': {'protocolVersion': '2024-11-05', 'capabilities': {}, 'clientInfo': {'name': 'MCP Streamable HTTP Client', 'version': '1.0.0'}}}
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 0, 'result': {'protocolVersion': '2024-11-05', 'capabilities': {'tools': {'listChanged': True}}, 'serverInfo': {'name': 'dify-external-api-server', 'version': '1.0.0'}}}
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "method": "notifications/initialized", "params": {}}
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'method': 'notifications/initialized', 'params': {}}
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:_handle_mcp_request:347 - MCP client initialized
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:172 - MCP notification handled, returning empty response
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 1, "method": "tools/list", "params": {}}
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 1, 'method': 'tools/list', 'params': {}}
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 1, 'result': {'tools': [{'name': 'get_iot_cnc_data', 'description': 'Get CNC data records with optional filtering and pagination', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Filter results by specific equipment ID (optional)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return (default: 50, max: 1000)'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination (default: 0)'}}, 'required': []}}, {'name': 'get_iot_cnc_data_by_id', 'description': 'Get a specific CNC data record by its ID', 'inputSchema': {'type': 'object', 'properties': {'cnc_data_id': {'type': 'string', 'description': 'The ID of the CNC data record to retrieve'}}, 'required': ['cnc_data_id']}}, {'name': 'get_iot_equipment_list', 'description': 'Get a list of unique equipment IDs from all CNC data records', 'inputSchema': {'type': 'object', 'properties': {}, 'required': []}}, {'name': 'search_cnc_data', 'description': 'Advanced search for CNC data with multiple filters', 'inputSchema': {'type': 'object', 'properties': {'equipment_ids': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of equipment IDs to filter by'}, 'operation_mode': {'type': 'string', 'enum': ['AUTO', 'MANUAL'], 'description': 'Filter by operation mode'}, 'has_alarm': {'type': 'boolean', 'description': 'Filter records with or without alarms'}, 'min_workpiece_count': {'type': 'integer', 'description': 'Minimum workpiece count filter'}, 'date_from': {'type': 'string', 'description': 'Filter records from this date (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'Filter records to this date (YYYY-MM-DD format)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination'}}, 'required': []}}, {'name': 'get_equipment_summary', 'description': 'Get summary statistics for specific equipment', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Equipment ID to get summary for'}, 'date_from': {'type': 'string', 'description': 'Start date for summary (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'End date for summary (YYYY-MM-DD format)'}}, 'required': ['equipment_id']}}]}}
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "get_iot_cnc_data_by_id", "arguments": {"cnc_data_id": "cnc-CNC-001-0021"}}}
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 2, 'method': 'tools/call', 'params': {'name': 'get_iot_cnc_data_by_id', 'arguments': {'cnc_data_id': 'cnc-CNC-001-0021'}}}
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:_handle_mcp_request:378 - MCP tool call: get_iot_cnc_data_by_id
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:_handle_mcp_request:397 - Parsed arguments: {'cnc_data_id': 'cnc-CNC-001-0021'}
2025-08-04 04:15:30 | INFO     | src.tools.external_api:execute_tool:140 - Executing IoT CNC tool: get_iot_cnc_data_by_id
2025-08-04 04:15:30 | INFO     | src.tools.external_api:_get_iot_cnc_data_by_id:213 - Making HTTP request to endpoint: get_iot_cnc_data_by_id
2025-08-04 04:15:30 | INFO     | src.utils.http_client:request:53 - HTTP GET Request to: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify.get_iot_cnc_data_by_id
2025-08-04 04:15:30 | INFO     | src.utils.http_client:request:54 - Base URL: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify., Endpoint: get_iot_cnc_data_by_id
2025-08-04 04:15:30 | INFO     | src.utils.http_client:request:55 - Params: {'cnc_data_id': 'cnc-CNC-001-0021'}, JSON Data: None
2025-08-04 04:15:30 | INFO     | src.utils.http_client:request:75 - Response received: Status 200, Content-Type: application/json
2025-08-04 04:15:30 | INFO     | src.utils.http_client:request:79 - JSON Response keys: ['message']
2025-08-04 04:15:30 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 2, 'result': {'content': [{'type': 'text', 'text': "CNC Data Record (ID: cnc-CNC-001-0021):\n```json\n{'id': 'cnc-CNC-001-0021', 'equipment_id': 'CNC-001', 'workpiece_count': 54, 'runtime': '324.5', 'cutting_time': '184.2', 'cnc_model': 'Fanuc Robodrill α-D21', 'current_tool_no': 'T01', 'operation_mode': 'AUTO', 'run_mode': 'MEM', 'rapid_override': '100', 'spindle_actual_rpm': '8000', 'feed_actual_rate': '1500', 'spindle_load': '92.5', 'x_axis_load': '31.5', 'y_axis_load': '26.8', 'z_axis_load': '76.9', 'alarm_code': 'ALM301', 'alarm_message': '主轴过载，Z轴负载异常升高', 'created_at': '2025-07-24 15:00:56.195304', 'updated_at': '2025-07-24 15:00:56.195304', 'created_by': 'Administrator', 'modified_by': 'Administrator'}\n```"}]}}
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 0, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "MCP Streamable HTTP Client", "version": "1.0.0"}}}
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 0, 'method': 'initialize', 'params': {'protocolVersion': '2024-11-05', 'capabilities': {}, 'clientInfo': {'name': 'MCP Streamable HTTP Client', 'version': '1.0.0'}}}
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 0, 'result': {'protocolVersion': '2024-11-05', 'capabilities': {'tools': {'listChanged': True}}, 'serverInfo': {'name': 'dify-external-api-server', 'version': '1.0.0'}}}
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "method": "notifications/initialized", "params": {}}
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'method': 'notifications/initialized', 'params': {}}
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:_handle_mcp_request:347 - MCP client initialized
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:172 - MCP notification handled, returning empty response
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 1, "method": "tools/list", "params": {}}
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 1, 'method': 'tools/list', 'params': {}}
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 1, 'result': {'tools': [{'name': 'get_iot_cnc_data', 'description': 'Get CNC data records with optional filtering and pagination', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Filter results by specific equipment ID (optional)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return (default: 50, max: 1000)'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination (default: 0)'}}, 'required': []}}, {'name': 'get_iot_cnc_data_by_id', 'description': 'Get a specific CNC data record by its ID', 'inputSchema': {'type': 'object', 'properties': {'cnc_data_id': {'type': 'string', 'description': 'The ID of the CNC data record to retrieve'}}, 'required': ['cnc_data_id']}}, {'name': 'get_iot_equipment_list', 'description': 'Get a list of unique equipment IDs from all CNC data records', 'inputSchema': {'type': 'object', 'properties': {}, 'required': []}}, {'name': 'search_cnc_data', 'description': 'Advanced search for CNC data with multiple filters', 'inputSchema': {'type': 'object', 'properties': {'equipment_ids': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of equipment IDs to filter by'}, 'operation_mode': {'type': 'string', 'enum': ['AUTO', 'MANUAL'], 'description': 'Filter by operation mode'}, 'has_alarm': {'type': 'boolean', 'description': 'Filter records with or without alarms'}, 'min_workpiece_count': {'type': 'integer', 'description': 'Minimum workpiece count filter'}, 'date_from': {'type': 'string', 'description': 'Filter records from this date (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'Filter records to this date (YYYY-MM-DD format)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination'}}, 'required': []}}, {'name': 'get_equipment_summary', 'description': 'Get summary statistics for specific equipment', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Equipment ID to get summary for'}, 'date_from': {'type': 'string', 'description': 'Start date for summary (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'End date for summary (YYYY-MM-DD format)'}}, 'required': ['equipment_id']}}]}}
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "get_iot_cnc_data_by_id", "arguments": {"cnc_data_id": "cnc-CNC-001-0021"}}}
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 2, 'method': 'tools/call', 'params': {'name': 'get_iot_cnc_data_by_id', 'arguments': {'cnc_data_id': 'cnc-CNC-001-0021'}}}
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:_handle_mcp_request:378 - MCP tool call: get_iot_cnc_data_by_id
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:_handle_mcp_request:397 - Parsed arguments: {'cnc_data_id': 'cnc-CNC-001-0021'}
2025-08-04 10:49:44 | INFO     | src.tools.external_api:execute_tool:140 - Executing IoT CNC tool: get_iot_cnc_data_by_id
2025-08-04 10:49:44 | INFO     | src.tools.external_api:_get_iot_cnc_data_by_id:213 - Making HTTP request to endpoint: get_iot_cnc_data_by_id
2025-08-04 10:49:44 | INFO     | src.utils.http_client:request:53 - HTTP GET Request to: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify.get_iot_cnc_data_by_id
2025-08-04 10:49:44 | INFO     | src.utils.http_client:request:54 - Base URL: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify., Endpoint: get_iot_cnc_data_by_id
2025-08-04 10:49:44 | INFO     | src.utils.http_client:request:55 - Params: {'cnc_data_id': 'cnc-CNC-001-0021'}, JSON Data: None
2025-08-04 10:49:44 | INFO     | src.utils.http_client:request:75 - Response received: Status 200, Content-Type: application/json
2025-08-04 10:49:44 | INFO     | src.utils.http_client:request:79 - JSON Response keys: ['message']
2025-08-04 10:49:44 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 2, 'result': {'content': [{'type': 'text', 'text': "CNC Data Record (ID: cnc-CNC-001-0021):\n```json\n{'id': 'cnc-CNC-001-0021', 'equipment_id': 'CNC-001', 'workpiece_count': 54, 'runtime': '324.5', 'cutting_time': '184.2', 'cnc_model': 'Fanuc Robodrill α-D21', 'current_tool_no': 'T01', 'operation_mode': 'AUTO', 'run_mode': 'MEM', 'rapid_override': '100', 'spindle_actual_rpm': '8000', 'feed_actual_rate': '1500', 'spindle_load': '92.5', 'x_axis_load': '31.5', 'y_axis_load': '26.8', 'z_axis_load': '76.9', 'alarm_code': 'ALM301', 'alarm_message': '主轴过载，Z轴负载异常升高', 'created_at': '2025-07-24 15:00:56.195304', 'updated_at': '2025-07-24 15:00:56.195304', 'created_by': 'Administrator', 'modified_by': 'Administrator'}\n```"}]}}
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 0, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "MCP Streamable HTTP Client", "version": "1.0.0"}}}
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 0, 'method': 'initialize', 'params': {'protocolVersion': '2024-11-05', 'capabilities': {}, 'clientInfo': {'name': 'MCP Streamable HTTP Client', 'version': '1.0.0'}}}
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 0, 'result': {'protocolVersion': '2024-11-05', 'capabilities': {'tools': {'listChanged': True}}, 'serverInfo': {'name': 'dify-external-api-server', 'version': '1.0.0'}}}
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "method": "notifications/initialized", "params": {}}
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'method': 'notifications/initialized', 'params': {}}
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:_handle_mcp_request:347 - MCP client initialized
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:172 - MCP notification handled, returning empty response
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 1, "method": "tools/list", "params": {}}
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 1, 'method': 'tools/list', 'params': {}}
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 1, 'result': {'tools': [{'name': 'get_iot_cnc_data', 'description': 'Get CNC data records with optional filtering and pagination', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Filter results by specific equipment ID (optional)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return (default: 50, max: 1000)'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination (default: 0)'}}, 'required': []}}, {'name': 'get_iot_cnc_data_by_id', 'description': 'Get a specific CNC data record by its ID', 'inputSchema': {'type': 'object', 'properties': {'cnc_data_id': {'type': 'string', 'description': 'The ID of the CNC data record to retrieve'}}, 'required': ['cnc_data_id']}}, {'name': 'get_iot_equipment_list', 'description': 'Get a list of unique equipment IDs from all CNC data records', 'inputSchema': {'type': 'object', 'properties': {}, 'required': []}}, {'name': 'search_cnc_data', 'description': 'Advanced search for CNC data with multiple filters', 'inputSchema': {'type': 'object', 'properties': {'equipment_ids': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of equipment IDs to filter by'}, 'operation_mode': {'type': 'string', 'enum': ['AUTO', 'MANUAL'], 'description': 'Filter by operation mode'}, 'has_alarm': {'type': 'boolean', 'description': 'Filter records with or without alarms'}, 'min_workpiece_count': {'type': 'integer', 'description': 'Minimum workpiece count filter'}, 'date_from': {'type': 'string', 'description': 'Filter records from this date (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'Filter records to this date (YYYY-MM-DD format)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination'}}, 'required': []}}, {'name': 'get_equipment_summary', 'description': 'Get summary statistics for specific equipment', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Equipment ID to get summary for'}, 'date_from': {'type': 'string', 'description': 'Start date for summary (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'End date for summary (YYYY-MM-DD format)'}}, 'required': ['equipment_id']}}]}}
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "get_iot_cnc_data_by_id", "arguments": {"cnc_data_id": "cnc-CNC-001-0021"}}}
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 2, 'method': 'tools/call', 'params': {'name': 'get_iot_cnc_data_by_id', 'arguments': {'cnc_data_id': 'cnc-CNC-001-0021'}}}
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:_handle_mcp_request:378 - MCP tool call: get_iot_cnc_data_by_id
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:_handle_mcp_request:397 - Parsed arguments: {'cnc_data_id': 'cnc-CNC-001-0021'}
2025-08-04 13:07:41 | INFO     | src.tools.external_api:execute_tool:140 - Executing IoT CNC tool: get_iot_cnc_data_by_id
2025-08-04 13:07:41 | INFO     | src.tools.external_api:_get_iot_cnc_data_by_id:213 - Making HTTP request to endpoint: get_iot_cnc_data_by_id
2025-08-04 13:07:41 | INFO     | src.utils.http_client:request:53 - HTTP GET Request to: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify.get_iot_cnc_data_by_id
2025-08-04 13:07:41 | INFO     | src.utils.http_client:request:54 - Base URL: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify., Endpoint: get_iot_cnc_data_by_id
2025-08-04 13:07:41 | INFO     | src.utils.http_client:request:55 - Params: {'cnc_data_id': 'cnc-CNC-001-0021'}, JSON Data: None
2025-08-04 13:07:41 | INFO     | src.utils.http_client:request:75 - Response received: Status 200, Content-Type: application/json
2025-08-04 13:07:41 | INFO     | src.utils.http_client:request:79 - JSON Response keys: ['message']
2025-08-04 13:07:41 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 2, 'result': {'content': [{'type': 'text', 'text': "CNC Data Record (ID: cnc-CNC-001-0021):\n```json\n{'id': 'cnc-CNC-001-0021', 'equipment_id': 'CNC-001', 'workpiece_count': 54, 'runtime': '324.5', 'cutting_time': '184.2', 'cnc_model': 'Fanuc Robodrill α-D21', 'current_tool_no': 'T01', 'operation_mode': 'AUTO', 'run_mode': 'MEM', 'rapid_override': '100', 'spindle_actual_rpm': '8000', 'feed_actual_rate': '1500', 'spindle_load': '92.5', 'x_axis_load': '31.5', 'y_axis_load': '26.8', 'z_axis_load': '76.9', 'alarm_code': 'ALM301', 'alarm_message': '主轴过载，Z轴负载异常升高', 'created_at': '2025-07-24 15:00:56.195304', 'updated_at': '2025-07-24 15:00:56.195304', 'created_by': 'Administrator', 'modified_by': 'Administrator'}\n```"}]}}
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 0, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "MCP Streamable HTTP Client", "version": "1.0.0"}}}
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 0, 'method': 'initialize', 'params': {'protocolVersion': '2024-11-05', 'capabilities': {}, 'clientInfo': {'name': 'MCP Streamable HTTP Client', 'version': '1.0.0'}}}
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 0, 'result': {'protocolVersion': '2024-11-05', 'capabilities': {'tools': {'listChanged': True}}, 'serverInfo': {'name': 'dify-external-api-server', 'version': '1.0.0'}}}
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "method": "notifications/initialized", "params": {}}
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'method': 'notifications/initialized', 'params': {}}
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:_handle_mcp_request:347 - MCP client initialized
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:172 - MCP notification handled, returning empty response
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 1, "method": "tools/list", "params": {}}
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 1, 'method': 'tools/list', 'params': {}}
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 1, 'result': {'tools': [{'name': 'get_iot_cnc_data', 'description': 'Get CNC data records with optional filtering and pagination', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Filter results by specific equipment ID (optional)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return (default: 50, max: 1000)'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination (default: 0)'}}, 'required': []}}, {'name': 'get_iot_cnc_data_by_id', 'description': 'Get a specific CNC data record by its ID', 'inputSchema': {'type': 'object', 'properties': {'cnc_data_id': {'type': 'string', 'description': 'The ID of the CNC data record to retrieve'}}, 'required': ['cnc_data_id']}}, {'name': 'get_iot_equipment_list', 'description': 'Get a list of unique equipment IDs from all CNC data records', 'inputSchema': {'type': 'object', 'properties': {}, 'required': []}}, {'name': 'search_cnc_data', 'description': 'Advanced search for CNC data with multiple filters', 'inputSchema': {'type': 'object', 'properties': {'equipment_ids': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of equipment IDs to filter by'}, 'operation_mode': {'type': 'string', 'enum': ['AUTO', 'MANUAL'], 'description': 'Filter by operation mode'}, 'has_alarm': {'type': 'boolean', 'description': 'Filter records with or without alarms'}, 'min_workpiece_count': {'type': 'integer', 'description': 'Minimum workpiece count filter'}, 'date_from': {'type': 'string', 'description': 'Filter records from this date (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'Filter records to this date (YYYY-MM-DD format)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination'}}, 'required': []}}, {'name': 'get_equipment_summary', 'description': 'Get summary statistics for specific equipment', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Equipment ID to get summary for'}, 'date_from': {'type': 'string', 'description': 'Start date for summary (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'End date for summary (YYYY-MM-DD format)'}}, 'required': ['equipment_id']}}]}}
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "get_iot_cnc_data_by_id", "arguments": {"cnc_data_id": "cnc-CNC-001-0021"}}}
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 2, 'method': 'tools/call', 'params': {'name': 'get_iot_cnc_data_by_id', 'arguments': {'cnc_data_id': 'cnc-CNC-001-0021'}}}
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:_handle_mcp_request:378 - MCP tool call: get_iot_cnc_data_by_id
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:_handle_mcp_request:397 - Parsed arguments: {'cnc_data_id': 'cnc-CNC-001-0021'}
2025-08-04 13:08:45 | INFO     | src.tools.external_api:execute_tool:140 - Executing IoT CNC tool: get_iot_cnc_data_by_id
2025-08-04 13:08:45 | INFO     | src.tools.external_api:_get_iot_cnc_data_by_id:213 - Making HTTP request to endpoint: get_iot_cnc_data_by_id
2025-08-04 13:08:45 | INFO     | src.utils.http_client:request:53 - HTTP GET Request to: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify.get_iot_cnc_data_by_id
2025-08-04 13:08:45 | INFO     | src.utils.http_client:request:54 - Base URL: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify., Endpoint: get_iot_cnc_data_by_id
2025-08-04 13:08:45 | INFO     | src.utils.http_client:request:55 - Params: {'cnc_data_id': 'cnc-CNC-001-0021'}, JSON Data: None
2025-08-04 13:08:45 | INFO     | src.utils.http_client:request:75 - Response received: Status 200, Content-Type: application/json
2025-08-04 13:08:45 | INFO     | src.utils.http_client:request:79 - JSON Response keys: ['message']
2025-08-04 13:08:45 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 2, 'result': {'content': [{'type': 'text', 'text': "CNC Data Record (ID: cnc-CNC-001-0021):\n```json\n{'id': 'cnc-CNC-001-0021', 'equipment_id': 'CNC-001', 'workpiece_count': 54, 'runtime': '324.5', 'cutting_time': '184.2', 'cnc_model': 'Fanuc Robodrill α-D21', 'current_tool_no': 'T01', 'operation_mode': 'AUTO', 'run_mode': 'MEM', 'rapid_override': '100', 'spindle_actual_rpm': '8000', 'feed_actual_rate': '1500', 'spindle_load': '92.5', 'x_axis_load': '31.5', 'y_axis_load': '26.8', 'z_axis_load': '76.9', 'alarm_code': 'ALM301', 'alarm_message': '主轴过载，Z轴负载异常升高', 'created_at': '2025-07-24 15:00:56.195304', 'updated_at': '2025-07-24 15:00:56.195304', 'created_by': 'Administrator', 'modified_by': 'Administrator'}\n```"}]}}
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 0, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "MCP Streamable HTTP Client", "version": "1.0.0"}}}
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 0, 'method': 'initialize', 'params': {'protocolVersion': '2024-11-05', 'capabilities': {}, 'clientInfo': {'name': 'MCP Streamable HTTP Client', 'version': '1.0.0'}}}
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 0, 'result': {'protocolVersion': '2024-11-05', 'capabilities': {'tools': {'listChanged': True}}, 'serverInfo': {'name': 'dify-external-api-server', 'version': '1.0.0'}}}
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "method": "notifications/initialized", "params": {}}
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'method': 'notifications/initialized', 'params': {}}
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:_handle_mcp_request:347 - MCP client initialized
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:172 - MCP notification handled, returning empty response
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 1, "method": "tools/list", "params": {}}
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 1, 'method': 'tools/list', 'params': {}}
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 1, 'result': {'tools': [{'name': 'get_iot_cnc_data', 'description': 'Get CNC data records with optional filtering and pagination', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Filter results by specific equipment ID (optional)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return (default: 50, max: 1000)'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination (default: 0)'}}, 'required': []}}, {'name': 'get_iot_cnc_data_by_id', 'description': 'Get a specific CNC data record by its ID', 'inputSchema': {'type': 'object', 'properties': {'cnc_data_id': {'type': 'string', 'description': 'The ID of the CNC data record to retrieve'}}, 'required': ['cnc_data_id']}}, {'name': 'get_iot_equipment_list', 'description': 'Get a list of unique equipment IDs from all CNC data records', 'inputSchema': {'type': 'object', 'properties': {}, 'required': []}}, {'name': 'search_cnc_data', 'description': 'Advanced search for CNC data with multiple filters', 'inputSchema': {'type': 'object', 'properties': {'equipment_ids': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of equipment IDs to filter by'}, 'operation_mode': {'type': 'string', 'enum': ['AUTO', 'MANUAL'], 'description': 'Filter by operation mode'}, 'has_alarm': {'type': 'boolean', 'description': 'Filter records with or without alarms'}, 'min_workpiece_count': {'type': 'integer', 'description': 'Minimum workpiece count filter'}, 'date_from': {'type': 'string', 'description': 'Filter records from this date (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'Filter records to this date (YYYY-MM-DD format)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination'}}, 'required': []}}, {'name': 'get_equipment_summary', 'description': 'Get summary statistics for specific equipment', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Equipment ID to get summary for'}, 'date_from': {'type': 'string', 'description': 'Start date for summary (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'End date for summary (YYYY-MM-DD format)'}}, 'required': ['equipment_id']}}]}}
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "get_iot_cnc_data_by_id", "arguments": {"cnc_data_id": "cnc-CNC-001-0021"}}}
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 2, 'method': 'tools/call', 'params': {'name': 'get_iot_cnc_data_by_id', 'arguments': {'cnc_data_id': 'cnc-CNC-001-0021'}}}
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:_handle_mcp_request:378 - MCP tool call: get_iot_cnc_data_by_id
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:_handle_mcp_request:397 - Parsed arguments: {'cnc_data_id': 'cnc-CNC-001-0021'}
2025-08-04 13:22:53 | INFO     | src.tools.external_api:execute_tool:140 - Executing IoT CNC tool: get_iot_cnc_data_by_id
2025-08-04 13:22:53 | INFO     | src.tools.external_api:_get_iot_cnc_data_by_id:213 - Making HTTP request to endpoint: get_iot_cnc_data_by_id
2025-08-04 13:22:53 | INFO     | src.utils.http_client:request:53 - HTTP GET Request to: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify.get_iot_cnc_data_by_id
2025-08-04 13:22:53 | INFO     | src.utils.http_client:request:54 - Base URL: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify., Endpoint: get_iot_cnc_data_by_id
2025-08-04 13:22:53 | INFO     | src.utils.http_client:request:55 - Params: {'cnc_data_id': 'cnc-CNC-001-0021'}, JSON Data: None
2025-08-04 13:22:53 | INFO     | src.utils.http_client:request:75 - Response received: Status 200, Content-Type: application/json
2025-08-04 13:22:53 | INFO     | src.utils.http_client:request:79 - JSON Response keys: ['message']
2025-08-04 13:22:53 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 2, 'result': {'content': [{'type': 'text', 'text': "CNC Data Record (ID: cnc-CNC-001-0021):\n```json\n{'id': 'cnc-CNC-001-0021', 'equipment_id': 'CNC-001', 'workpiece_count': 54, 'runtime': '324.5', 'cutting_time': '184.2', 'cnc_model': 'Fanuc Robodrill α-D21', 'current_tool_no': 'T01', 'operation_mode': 'AUTO', 'run_mode': 'MEM', 'rapid_override': '100', 'spindle_actual_rpm': '8000', 'feed_actual_rate': '1500', 'spindle_load': '92.5', 'x_axis_load': '31.5', 'y_axis_load': '26.8', 'z_axis_load': '76.9', 'alarm_code': 'ALM301', 'alarm_message': '主轴过载，Z轴负载异常升高', 'created_at': '2025-07-24 15:00:56.195304', 'updated_at': '2025-07-24 15:00:56.195304', 'created_by': 'Administrator', 'modified_by': 'Administrator'}\n```"}]}}
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 0, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "MCP Streamable HTTP Client", "version": "1.0.0"}}}
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 0, 'method': 'initialize', 'params': {'protocolVersion': '2024-11-05', 'capabilities': {}, 'clientInfo': {'name': 'MCP Streamable HTTP Client', 'version': '1.0.0'}}}
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 0, 'result': {'protocolVersion': '2024-11-05', 'capabilities': {'tools': {'listChanged': True}}, 'serverInfo': {'name': 'dify-external-api-server', 'version': '1.0.0'}}}
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "method": "notifications/initialized", "params": {}}
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'method': 'notifications/initialized', 'params': {}}
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:_handle_mcp_request:347 - MCP client initialized
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:172 - MCP notification handled, returning empty response
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 1, "method": "tools/list", "params": {}}
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 1, 'method': 'tools/list', 'params': {}}
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 1, 'result': {'tools': [{'name': 'get_iot_cnc_data', 'description': 'Get CNC data records with optional filtering and pagination', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Filter results by specific equipment ID (optional)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return (default: 50, max: 1000)'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination (default: 0)'}}, 'required': []}}, {'name': 'get_iot_cnc_data_by_id', 'description': 'Get a specific CNC data record by its ID', 'inputSchema': {'type': 'object', 'properties': {'cnc_data_id': {'type': 'string', 'description': 'The ID of the CNC data record to retrieve'}}, 'required': ['cnc_data_id']}}, {'name': 'get_iot_equipment_list', 'description': 'Get a list of unique equipment IDs from all CNC data records', 'inputSchema': {'type': 'object', 'properties': {}, 'required': []}}, {'name': 'search_cnc_data', 'description': 'Advanced search for CNC data with multiple filters', 'inputSchema': {'type': 'object', 'properties': {'equipment_ids': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of equipment IDs to filter by'}, 'operation_mode': {'type': 'string', 'enum': ['AUTO', 'MANUAL'], 'description': 'Filter by operation mode'}, 'has_alarm': {'type': 'boolean', 'description': 'Filter records with or without alarms'}, 'min_workpiece_count': {'type': 'integer', 'description': 'Minimum workpiece count filter'}, 'date_from': {'type': 'string', 'description': 'Filter records from this date (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'Filter records to this date (YYYY-MM-DD format)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination'}}, 'required': []}}, {'name': 'get_equipment_summary', 'description': 'Get summary statistics for specific equipment', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Equipment ID to get summary for'}, 'date_from': {'type': 'string', 'description': 'Start date for summary (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'End date for summary (YYYY-MM-DD format)'}}, 'required': ['equipment_id']}}]}}
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "get_iot_cnc_data_by_id", "arguments": {"cnc_data_id": "cnc-CNC-001-0021"}}}
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 2, 'method': 'tools/call', 'params': {'name': 'get_iot_cnc_data_by_id', 'arguments': {'cnc_data_id': 'cnc-CNC-001-0021'}}}
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:_handle_mcp_request:378 - MCP tool call: get_iot_cnc_data_by_id
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:_handle_mcp_request:397 - Parsed arguments: {'cnc_data_id': 'cnc-CNC-001-0021'}
2025-08-04 13:25:04 | INFO     | src.tools.external_api:execute_tool:140 - Executing IoT CNC tool: get_iot_cnc_data_by_id
2025-08-04 13:25:04 | INFO     | src.tools.external_api:_get_iot_cnc_data_by_id:213 - Making HTTP request to endpoint: get_iot_cnc_data_by_id
2025-08-04 13:25:04 | INFO     | src.utils.http_client:request:53 - HTTP GET Request to: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify.get_iot_cnc_data_by_id
2025-08-04 13:25:04 | INFO     | src.utils.http_client:request:54 - Base URL: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify., Endpoint: get_iot_cnc_data_by_id
2025-08-04 13:25:04 | INFO     | src.utils.http_client:request:55 - Params: {'cnc_data_id': 'cnc-CNC-001-0021'}, JSON Data: None
2025-08-04 13:25:04 | INFO     | src.utils.http_client:request:75 - Response received: Status 200, Content-Type: application/json
2025-08-04 13:25:04 | INFO     | src.utils.http_client:request:79 - JSON Response keys: ['message']
2025-08-04 13:25:04 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 2, 'result': {'content': [{'type': 'text', 'text': "CNC Data Record (ID: cnc-CNC-001-0021):\n```json\n{'id': 'cnc-CNC-001-0021', 'equipment_id': 'CNC-001', 'workpiece_count': 54, 'runtime': '324.5', 'cutting_time': '184.2', 'cnc_model': 'Fanuc Robodrill α-D21', 'current_tool_no': 'T01', 'operation_mode': 'AUTO', 'run_mode': 'MEM', 'rapid_override': '100', 'spindle_actual_rpm': '8000', 'feed_actual_rate': '1500', 'spindle_load': '92.5', 'x_axis_load': '31.5', 'y_axis_load': '26.8', 'z_axis_load': '76.9', 'alarm_code': 'ALM301', 'alarm_message': '主轴过载，Z轴负载异常升高', 'created_at': '2025-07-24 15:00:56.195304', 'updated_at': '2025-07-24 15:00:56.195304', 'created_by': 'Administrator', 'modified_by': 'Administrator'}\n```"}]}}
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 0, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "MCP Streamable HTTP Client", "version": "1.0.0"}}}
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 0, 'method': 'initialize', 'params': {'protocolVersion': '2024-11-05', 'capabilities': {}, 'clientInfo': {'name': 'MCP Streamable HTTP Client', 'version': '1.0.0'}}}
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 0, 'result': {'protocolVersion': '2024-11-05', 'capabilities': {'tools': {'listChanged': True}}, 'serverInfo': {'name': 'dify-external-api-server', 'version': '1.0.0'}}}
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "method": "notifications/initialized", "params": {}}
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'method': 'notifications/initialized', 'params': {}}
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:_handle_mcp_request:347 - MCP client initialized
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:172 - MCP notification handled, returning empty response
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 1, "method": "tools/list", "params": {}}
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 1, 'method': 'tools/list', 'params': {}}
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 1, 'result': {'tools': [{'name': 'get_iot_cnc_data', 'description': 'Get CNC data records with optional filtering and pagination', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Filter results by specific equipment ID (optional)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return (default: 50, max: 1000)'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination (default: 0)'}}, 'required': []}}, {'name': 'get_iot_cnc_data_by_id', 'description': 'Get a specific CNC data record by its ID', 'inputSchema': {'type': 'object', 'properties': {'cnc_data_id': {'type': 'string', 'description': 'The ID of the CNC data record to retrieve'}}, 'required': ['cnc_data_id']}}, {'name': 'get_iot_equipment_list', 'description': 'Get a list of unique equipment IDs from all CNC data records', 'inputSchema': {'type': 'object', 'properties': {}, 'required': []}}, {'name': 'search_cnc_data', 'description': 'Advanced search for CNC data with multiple filters', 'inputSchema': {'type': 'object', 'properties': {'equipment_ids': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of equipment IDs to filter by'}, 'operation_mode': {'type': 'string', 'enum': ['AUTO', 'MANUAL'], 'description': 'Filter by operation mode'}, 'has_alarm': {'type': 'boolean', 'description': 'Filter records with or without alarms'}, 'min_workpiece_count': {'type': 'integer', 'description': 'Minimum workpiece count filter'}, 'date_from': {'type': 'string', 'description': 'Filter records from this date (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'Filter records to this date (YYYY-MM-DD format)'}, 'limit': {'type': 'integer', 'default': 50, 'minimum': 1, 'maximum': 1000, 'description': 'Number of records to return'}, 'offset': {'type': 'integer', 'default': 0, 'minimum': 0, 'description': 'Number of records to skip for pagination'}}, 'required': []}}, {'name': 'get_equipment_summary', 'description': 'Get summary statistics for specific equipment', 'inputSchema': {'type': 'object', 'properties': {'equipment_id': {'type': 'string', 'description': 'Equipment ID to get summary for'}, 'date_from': {'type': 'string', 'description': 'Start date for summary (YYYY-MM-DD format)'}, 'date_to': {'type': 'string', 'description': 'End date for summary (YYYY-MM-DD format)'}}, 'required': ['equipment_id']}}]}}
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:162 - MCP Raw request body: {"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "get_iot_cnc_data_by_id", "arguments": {"cnc_data_id": "cnc-CNC-001-0021"}}}
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:167 - MCP Parsed request: {'jsonrpc': '2.0', 'id': 2, 'method': 'tools/call', 'params': {'name': 'get_iot_cnc_data_by_id', 'arguments': {'cnc_data_id': 'cnc-CNC-001-0021'}}}
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:_handle_mcp_request:378 - MCP tool call: get_iot_cnc_data_by_id
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:_handle_mcp_request:397 - Parsed arguments: {'cnc_data_id': 'cnc-CNC-001-0021'}
2025-08-04 13:50:34 | INFO     | src.tools.external_api:execute_tool:140 - Executing IoT CNC tool: get_iot_cnc_data_by_id
2025-08-04 13:50:34 | INFO     | src.tools.external_api:_get_iot_cnc_data_by_id:213 - Making HTTP request to endpoint: get_iot_cnc_data_by_id
2025-08-04 13:50:34 | INFO     | src.utils.http_client:request:53 - HTTP GET Request to: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify.get_iot_cnc_data_by_id
2025-08-04 13:50:34 | INFO     | src.utils.http_client:request:54 - Base URL: http://iot.datawits.net:8000/api/method/frappe.integrations.api_dify., Endpoint: get_iot_cnc_data_by_id
2025-08-04 13:50:34 | INFO     | src.utils.http_client:request:55 - Params: {'cnc_data_id': 'cnc-CNC-001-0021'}, JSON Data: None
2025-08-04 13:50:34 | INFO     | src.utils.http_client:request:75 - Response received: Status 200, Content-Type: application/json
2025-08-04 13:50:34 | INFO     | src.utils.http_client:request:79 - JSON Response keys: ['message']
2025-08-04 13:50:34 | INFO     | src.mcp_http_server:mcp_streamable_endpoint:175 - MCP Response: {'jsonrpc': '2.0', 'id': 2, 'result': {'content': [{'type': 'text', 'text': "CNC Data Record (ID: cnc-CNC-001-0021):\n```json\n{'id': 'cnc-CNC-001-0021', 'equipment_id': 'CNC-001', 'workpiece_count': 54, 'runtime': '324.5', 'cutting_time': '184.2', 'cnc_model': 'Fanuc Robodrill α-D21', 'current_tool_no': 'T01', 'operation_mode': 'AUTO', 'run_mode': 'MEM', 'rapid_override': '100', 'spindle_actual_rpm': '8000', 'feed_actual_rate': '1500', 'spindle_load': '92.5', 'x_axis_load': '31.5', 'y_axis_load': '26.8', 'z_axis_load': '76.9', 'alarm_code': 'ALM301', 'alarm_message': '主轴过载，Z轴负载异常升高', 'created_at': '2025-07-24 15:00:56.195304', 'updated_at': '2025-07-24 15:00:56.195304', 'created_by': 'Administrator', 'modified_by': 'Administrator'}\n```"}]}}
